import{_ as a,M as n,p as s,q as l,R as e,t,N as d,V as o,a1 as r}from"./framework-3547d075.js";const c={},h=r('<h1 id="aimesh" tabindex="-1"><a class="header-anchor" href="#aimesh" aria-hidden="true">#</a> AiMesh</h1><h2 id="limitations" tabindex="-1"><a class="header-anchor" href="#limitations" aria-hidden="true">#</a> Limitations</h2><table><tr><td><table><thead><tr><th>Firmware</th><th>Versions</th></tr></thead><tbody><tr><td>Stock</td><td><code>&gt;= 3.0.0.4.386.x</code></td></tr><tr><td>Merlin</td><td><code>&gt;= 3.0.0.4.386.x</code></td></tr></tbody></table></td><td><table><thead><tr><th>Device mode</th><th>Available</th></tr></thead><tbody><tr><td>Router</td><td>ðŸ’š</td></tr><tr><td>AiMesh Node</td><td>ðŸ’›</td></tr></tbody></table></td></tr></table><h2 id="identity" tabindex="-1"><a class="header-anchor" href="#identity" aria-hidden="true">#</a> Identity</h2><p>AiMesh node identity is a base information about the node / router. It is exposed in the lists of nodes and events. The following attributes are the part of node identity:</p><p><code>AsusRouter &gt;= 0.17.0</code></p><ul><li><code>mac</code> - MAC address of the device</li><li><code>ip</code> - IP address assigned to the device</li><li><code>alias</code> - alias of the node (as set by user through device Web UI)</li><li><code>model</code> - device model</li><li><code>type</code> - type of node [<code>router</code>, <code>node</code>]</li><li><code>connected</code> - current connection status (<code>boolean</code>)</li></ul><h2 id="device" tabindex="-1"><a class="header-anchor" href="#device" aria-hidden="true">#</a> Device</h2><p><code>AsusRouter &gt;= 0.17.0</code></p><p>For each AiMesh node a Home Assistant device is created, providing the basic device info:</p><ul><li>Model</li><li>Manufacturer</li><li>Firmware version</li><li>Connected via (a link to the main <code>router</code> device through which <code>node</code> is connected)</li></ul><p>Device name is set via <code>model</code> value.</p><h2 id="binary-sensor" tabindex="-1"><a class="header-anchor" href="#binary-sensor" aria-hidden="true">#</a> Binary sensor</h2><h3 id="aimesh-model-mac" tabindex="-1"><a class="header-anchor" href="#aimesh-model-mac" aria-hidden="true">#</a> <code>aimesh_{model}_{mac}</code></h3><p><code>AsusRouter &gt;= 0.17.0</code></p><ul><li><p>Default entity state: <code>Enabled</code></p></li><li><p>Details:</p><p>The current state of AiMesh node. This binary sensor is automatically added to the <a href="#device">AiMesh device</a>.</p><h4 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes" aria-hidden="true">#</a> Attributes</h4><ul><li><h5 id="identity-attributes" tabindex="-1"><a class="header-anchor" href="#identity-attributes" aria-hidden="true">#</a> <a href="#identity">identity attributes</a></h5><ul><li>except: <code>connected</code></li></ul></li><li><h5 id="level" tabindex="-1"><a class="header-anchor" href="#level" aria-hidden="true">#</a> level</h5><ul><li><p>Type: <code>int</code></p></li><li><p>Details:</p><p>Level of the node in AiMesh topology. <code>router</code> is always <code>0</code>.</p></li></ul></li><li><h5 id="parent" tabindex="-1"><a class="header-anchor" href="#parent" aria-hidden="true">#</a> parent</h5><ul><li><p>Type: <code>dict</code></p></li><li><p>Attributes:</p><ul><li>connection - [<code>wired</code>, <code>2ghz</code>, <code>5ghz</code>, <code>5ghz2</code>, <code>6ghz</code>]</li><li>mac</li><li>rssi</li><li>ssid</li></ul></li><li><p>Details:</p><p>Information about the parent node. If <code>connection</code> is <code>wired</code>, other attributes are not present.</p></li></ul></li><li><h5 id="product-id" tabindex="-1"><a class="header-anchor" href="#product-id" aria-hidden="true">#</a> product_id</h5><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Product ID of the device. In most cases is the same as <code>model</code>.</p></li></ul></li></ul></li></ul><h2 id="sensor" tabindex="-1"><a class="header-anchor" href="#sensor" aria-hidden="true">#</a> Sensor</h2><h3 id="device-aimesh" tabindex="-1"><a class="header-anchor" href="#device-aimesh" aria-hidden="true">#</a> <code>{device}_aimesh</code></h3><p><code>AsusRouter &gt;= 0.17.0</code></p><div class="custom-container warning"><p class="custom-container-title">Mode</p><p>This sensor is created only for devices in <code>Router</code> mode</p></div><ul><li><p>Default entity state: <code>Enabled</code></p></li><li><p>Type: <code>integer</code></p></li><li><p>Details:</p><p>The total number of AiMesh devices in the network (including the <code>router</code>).</p><h4 id="attributes-1" tabindex="-1"><a class="header-anchor" href="#attributes-1" aria-hidden="true">#</a> Attributes</h4><ul><li><h5 id="list" tabindex="-1"><a class="header-anchor" href="#list" aria-hidden="true">#</a> list</h5><ul><li><p>Type: <code>list[dict]</code></p></li><li><p>Details:</p><p>The list of all the nodes currently connected to the router. Each list element is an <a href="#identity"><code>identity</code></a>.</p></li></ul></li></ul></li></ul><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><h3 id="asusrouter-node-connected" tabindex="-1"><a class="header-anchor" href="#asusrouter-node-connected" aria-hidden="true">#</a> <code>asusrouter_node_connected</code></h3><p><code>AsusRouter &gt;= 0.17.0</code></p>',24),u=e("li",null,[e("p",null,[t("Data: "),e("a",{href:"#identity"},[e("code",null,"identity")])])],-1),p=e("p",null,"Details:",-1),f=e("p",null,"The event is raised when a new AiMesh node is connected to the router (if it was not connected before).",-1),b=e("h3",{id:"asusrouter-device-disconnected",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#asusrouter-device-disconnected","aria-hidden":"true"},"#"),t(),e("code",null,"asusrouter_device_disconnected")],-1),v=e("p",null,[e("code",null,"AsusRouter >= 0.17.0")],-1),m=e("li",null,[e("p",null,[t("Data: "),e("a",{href:"#identity"},[e("code",null,"identity")])])],-1),_=e("p",null,"Details:",-1),y=e("p",null,"The event is raised when an AiMesh node is disconnected from the router.",-1),x=e("h3",{id:"asusrouter-device-reconnected",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#asusrouter-device-reconnected","aria-hidden":"true"},"#"),t(),e("code",null,"asusrouter_device_reconnected")],-1),g=e("p",null,[e("code",null,"AsusRouter >= 0.17.0")],-1),A=e("li",null,[e("p",null,[t("Data: "),e("a",{href:"#identity"},[e("code",null,"identity")])])],-1),w=e("p",null,"Details:",-1),D=e("p",null,"The event is raised when an AiMesh node is connected to the router (if it was already tracked before).",-1);function T(M,R){const i=n("RouterLink");return s(),l("div",null,[h,e("ul",null,[u,e("li",null,[p,f,e("p",null,[t("This event is enabled by default. Refer to the "),d(i,{to:"/guide/configuration/events.html"},{default:o(()=>[t("Events")]),_:1}),t(" section for more info on how to enable / disable this event.")])])]),b,v,e("ul",null,[m,e("li",null,[_,y,e("p",null,[t("This event is enabled by default. Refer to the "),d(i,{to:"/guide/configuration/events.html"},{default:o(()=>[t("Events")]),_:1}),t(" section for more info on how to enable / disable this event.")])])]),x,g,e("ul",null,[A,e("li",null,[w,D,e("p",null,[t("This event is enabled by default. Refer to the "),d(i,{to:"/guide/configuration/events.html"},{default:o(()=>[t("Events")]),_:1}),t(" section for more info on how to enable / disable this event.")])])])])}const E=a(c,[["render",T],["__file","aimesh.html.vue"]]);export{E as default};
