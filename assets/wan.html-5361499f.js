import{_ as r,M as l,p as n,q as s,R as e,N as t,V as i,t as a,a1 as o}from"./framework-3547d075.js";const h={},c=o('<h1 id="wan" tabindex="-1"><a class="header-anchor" href="#wan" aria-hidden="true">#</a> WAN</h1><h2 id="limitations" tabindex="-1"><a class="header-anchor" href="#limitations" aria-hidden="true">#</a> Limitations</h2><table><tr><td><table><thead><tr><th>Firmware</th><th>Versions</th></tr></thead><tbody><tr><td>Stock</td><td><code>&gt;= 3.0.0.4.386.x</code></td></tr><tr><td>Merlin</td><td><code>&gt;= 3.0.0.4.386.x</code></td></tr></tbody></table></td><td><table><thead><tr><th>Device mode</th><th>Available</th></tr></thead><tbody><tr><td>Router</td><td>üíö</td></tr><tr><td>AiMesh Node</td><td>‚ù§Ô∏è</td></tr></tbody></table></td></tr></table><h2 id="binary-sensor" tabindex="-1"><a class="header-anchor" href="#binary-sensor" aria-hidden="true">#</a> Binary sensor</h2><h3 id="device-wan" tabindex="-1"><a class="header-anchor" href="#device-wan" aria-hidden="true">#</a> <code>{device}_wan</code></h3><p><code>AsusRouter &gt;= 0.3.0</code></p><ul><li><p>Default entity state: <code>Enabled</code></p></li><li><p>Details:</p><p>The status of WAN connection.</p><h4 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes" aria-hidden="true">#</a> Attributes</h4><ul><li><h5 id="dns" tabindex="-1"><a class="header-anchor" href="#dns" aria-hidden="true">#</a> dns</h5><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>DNS servers IP addresses as a single string, separated with <code></code> (space).</p></li></ul></li><li><h5 id="gateway" tabindex="-1"><a class="header-anchor" href="#gateway" aria-hidden="true">#</a> gateway</h5><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Gateway IP address.</p></li></ul></li><li><h5 id="ip" tabindex="-1"><a class="header-anchor" href="#ip" aria-hidden="true">#</a> ip</h5><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>WAN IP address.</p></li></ul></li><li><h5 id="ip-type" tabindex="-1"><a class="header-anchor" href="#ip-type" aria-hidden="true">#</a> ip_type</h5><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Method of obtaining IP address.</p></li></ul></li><li><h5 id="mask" tabindex="-1"><a class="header-anchor" href="#mask" aria-hidden="true">#</a> mask</h5><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>WAN mask.</p></li></ul></li><li><h5 id="private-subnet" tabindex="-1"><a class="header-anchor" href="#private-subnet" aria-hidden="true">#</a> private_subnet</h5><ul><li><p>Type: <code>integer</code></p></li><li><p>Details:</p><p>An integer value whether WAN is connected to private subnet (<code>1</code>) or not (<code>0</code>).</p></li></ul></li></ul></li></ul><h2 id="sensor" tabindex="-1"><a class="header-anchor" href="#sensor" aria-hidden="true">#</a> Sensor</h2><h3 id="device-wan-ip" tabindex="-1"><a class="header-anchor" href="#device-wan-ip" aria-hidden="true">#</a> <code>{device}_wan_ip</code></h3><p><code>AsusRouter &gt;= 0.3.0</code></p><ul><li><p>Default entity state: <code>Disabled</code></p></li><li><p>Details:</p><p>The IP address assigned to the WAN interface.</p><h4 id="attributes-1" tabindex="-1"><a class="header-anchor" href="#attributes-1" aria-hidden="true">#</a> Attributes</h4><ul><li><h5 id="dns-1" tabindex="-1"><a class="header-anchor" href="#dns-1" aria-hidden="true">#</a> dns</h5><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>DNS servers IP addresses as a single string, separated with <code></code> (space).</p></li></ul></li><li><h5 id="gateway-1" tabindex="-1"><a class="header-anchor" href="#gateway-1" aria-hidden="true">#</a> gateway</h5><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Gateway IP address.</p></li></ul></li><li><h5 id="ip-type-1" tabindex="-1"><a class="header-anchor" href="#ip-type-1" aria-hidden="true">#</a> ip_type</h5><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>Method of obtaining IP address.</p></li></ul></li><li><h5 id="mask-1" tabindex="-1"><a class="header-anchor" href="#mask-1" aria-hidden="true">#</a> mask</h5><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>WAN mask.</p></li></ul></li><li><h5 id="private-subnet-1" tabindex="-1"><a class="header-anchor" href="#private-subnet-1" aria-hidden="true">#</a> private_subnet</h5><ul><li><p>Type: <code>integer</code></p></li><li><p>Details:</p><p>An integer value whether WAN is connected to private subnet (<code>1</code>) or not (<code>0</code>).</p></li></ul></li></ul></li></ul><h3 id="other" tabindex="-1"><a class="header-anchor" href="#other" aria-hidden="true">#</a> Other</h3><h4 id="device-wan-download" tabindex="-1"><a class="header-anchor" href="#device-wan-download" aria-hidden="true">#</a> <code>{device}_wan_download</code></h4>',13),p=e("h4",{id:"device-wan-download-speed",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#device-wan-download-speed","aria-hidden":"true"},"#"),a(),e("code",null,"{device}_wan_download_speed")],-1),u=e("h4",{id:"device-wan-speed",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#device-wan-speed","aria-hidden":"true"},"#"),a(),e("code",null,"{device}_wan_speed")],-1),f=e("h4",{id:"device-wan-upload",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#device-wan-upload","aria-hidden":"true"},"#"),a(),e("code",null,"{device}_wan_upload")],-1),b=e("h4",{id:"device-wan-upload-speed",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#device-wan-upload-speed","aria-hidden":"true"},"#"),a(),e("code",null,"{device}_wan_upload_speed")],-1);function w(_,v){const d=l("RouterLink");return n(),s("div",null,[c,e("p",null,[e("em",null,[t(d,{to:"/features/network.html#device-interface-download"},{default:i(()=>[a("Refer to the Network section")]),_:1})])]),p,e("p",null,[e("em",null,[t(d,{to:"/features/network.html#device-interface-download-speed"},{default:i(()=>[a("Refer to the Network section")]),_:1})])]),u,e("p",null,[e("em",null,[t(d,{to:"/features/ports.html#device-wan-speed"},{default:i(()=>[a("Refer to the Ports section")]),_:1})])]),f,e("p",null,[e("em",null,[t(d,{to:"/features/network.html#device-interface-upload"},{default:i(()=>[a("Refer to the Network section")]),_:1})])]),b,e("p",null,[e("em",null,[t(d,{to:"/features/network.html#device-interface-upload-speed"},{default:i(()=>[a("Refer to the Network section")]),_:1})])])])}const x=r(h,[["render",w],["__file","wan.html.vue"]]);export{x as default};
