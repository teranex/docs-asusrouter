import{_ as o,M as r,p as n,q as h,R as e,t as i,N as d,V as l,a1 as a}from"./framework-3547d075.js";const s={},c=a('<h1 id="wlan" tabindex="-1"><a class="header-anchor" href="#wlan" aria-hidden="true">#</a> WLAN</h1><h2 id="limitations" tabindex="-1"><a class="header-anchor" href="#limitations" aria-hidden="true">#</a> Limitations</h2><table><tr><td><table><thead><tr><th>Firmware</th><th>Versions</th></tr></thead><tbody><tr><td>Stock</td><td><code>&gt;= 3.0.0.4.386.x</code></td></tr><tr><td>Merlin</td><td><code>&gt;= 3.0.0.4.386.x</code></td></tr></tbody></table></td><td><table><thead><tr><th>Device mode</th><th>Available</th></tr></thead><tbody><tr><td>Router</td><td>üíö</td></tr><tr><td>AiMesh Node</td><td>‚ù§Ô∏è</td></tr></tbody></table></td></tr></table><h2 id="binary-sensor-switch" tabindex="-1"><a class="header-anchor" href="#binary-sensor-switch" aria-hidden="true">#</a> Binary sensor / switch</h2>',4),u={class:"custom-container tip"},p=e("p",{class:"custom-container-title"},"Available entities",-1),_=e("code",null,"device control",-1),b=e("ul",null,[e("li",null,[e("code",null,"false"),i(": "),e("code",null,"binary_sensor"),i(" entities are created")]),e("li",null,[e("code",null,"true"),i(": "),e("code",null,"switch"),i(" entities are created")])],-1),f=e("h3",{id:"device-wireless-type",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#device-wireless-type","aria-hidden":"true"},"#"),i(),e("code",null,"{device}_wireless_{type}")],-1),y=e("p",null,[e("code",null,"AsusRouter >= 0.7.0")],-1),m=e("li",null,[e("p",null,[i("Default entity state: "),e("code",null,"Enabled")])],-1),x=a('<p>Details:</p><p>The current state of the wireless network <code>{type}</code>, where <code>{type}</code> is [<code>2_4_ghz</code>, <code>5_ghz</code>, <code>5_ghz_2</code>, <code>6_ghz</code>].</p><h4 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes" aria-hidden="true">#</a> Attributes</h4>',3),g=a('<li><h4 id="api-id" tabindex="-1"><a class="header-anchor" href="#api-id" aria-hidden="true">#</a> api_id</h4><ul><li>Type: service attribute</li></ul></li><li><h4 id="api-type" tabindex="-1"><a class="header-anchor" href="#api-type" aria-hidden="true">#</a> api_type</h4><ul><li>Type: service attribute</li></ul></li><li><h5 id="auth-method" tabindex="-1"><a class="header-anchor" href="#auth-method" aria-hidden="true">#</a> auth_method</h5><ul><li>Type: <code>string</code></li></ul></li><li><h5 id="channel" tabindex="-1"><a class="header-anchor" href="#channel" aria-hidden="true">#</a> channel</h5><ul><li>Type: <code>integer</code></li></ul></li><li><h5 id="channel-bandwidth" tabindex="-1"><a class="header-anchor" href="#channel-bandwidth" aria-hidden="true">#</a> channel_bandwidth</h5><ul><li>Type: <code>integer</code></li></ul></li><li><h5 id="chanspec" tabindex="-1"><a class="header-anchor" href="#chanspec" aria-hidden="true">#</a> chanspec</h5><ul><li>Type: <code>integer</code></li></ul></li><li><h5 id="country-code" tabindex="-1"><a class="header-anchor" href="#country-code" aria-hidden="true">#</a> country_code</h5><ul><li>Type: <code>string</code></li></ul></li><li><h5 id="gmode-check" tabindex="-1"><a class="header-anchor" href="#gmode-check" aria-hidden="true">#</a> gmode_check</h5></li><li><h5 id="group-key-rotation" tabindex="-1"><a class="header-anchor" href="#group-key-rotation" aria-hidden="true">#</a> group_key_rotation</h5><ul><li>Type: <code>integer</code></li></ul></li><li><h5 id="hidden" tabindex="-1"><a class="header-anchor" href="#hidden" aria-hidden="true">#</a> hidden</h5><ul><li>Type: <code>boolean</code></li></ul></li><li><h5 id="maclist-x" tabindex="-1"><a class="header-anchor" href="#maclist-x" aria-hidden="true">#</a> maclist_x</h5><ul><li>Type: <code>string</code></li></ul></li><li><h5 id="macmode" tabindex="-1"><a class="header-anchor" href="#macmode" aria-hidden="true">#</a> macmode</h5><ul><li>Type: <code>string</code></li></ul></li><li><h5 id="mbo-enable" tabindex="-1"><a class="header-anchor" href="#mbo-enable" aria-hidden="true">#</a> mbo_enable</h5><ul><li>Type: <code>integer</code></li></ul></li><li><h5 id="mfp" tabindex="-1"><a class="header-anchor" href="#mfp" aria-hidden="true">#</a> mfp</h5><ul><li>Type: <code>integer</code></li></ul></li><li><h5 id="mode" tabindex="-1"><a class="header-anchor" href="#mode" aria-hidden="true">#</a> mode</h5><ul><li>Type: <code>integer</code></li></ul></li>',15),w=e("h5",{id:"password",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#password","aria-hidden":"true"},"#"),i(" password")],-1),T=e("li",null,[e("p",null,[i("Type: "),e("code",null,"string")])],-1),v=e("p",null,"Details:",-1),k=e("code",null,"hide passwords",-1),A=e("code",null,"false",-1),R=a('<li><h5 id="radius-ipaddr" tabindex="-1"><a class="header-anchor" href="#radius-ipaddr" aria-hidden="true">#</a> radius_ipaddr</h5><ul><li>Type: <code>string</code></li></ul></li><li><h5 id="radius-key" tabindex="-1"><a class="header-anchor" href="#radius-key" aria-hidden="true">#</a> radius_key</h5><ul><li>Type: <code>string</code></li></ul></li><li><h5 id="radius-port" tabindex="-1"><a class="header-anchor" href="#radius-port" aria-hidden="true">#</a> radius_port</h5><ul><li>Type: <code>integer</code></li></ul></li><li><h5 id="ssid" tabindex="-1"><a class="header-anchor" href="#ssid" aria-hidden="true">#</a> ssid</h5><ul><li>Type: <code>string</code></li></ul></li><li><h5 id="wpa-encryption" tabindex="-1"><a class="header-anchor" href="#wpa-encryption" aria-hidden="true">#</a> wpa_encryption</h5><ul><li>Type: <code>string</code></li></ul></li><li><h5 id="xbox-optimized" tabindex="-1"><a class="header-anchor" href="#xbox-optimized" aria-hidden="true">#</a> xbox_optimized</h5></li>',6),N=e("h2",{id:"service",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#service","aria-hidden":"true"},"#"),i(" Service")],-1),D=e("h3",{id:"adjust-wlan",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#adjust-wlan","aria-hidden":"true"},"#"),i(),e("code",null,"adjust_wlan")],-1),z=e("p",null,[e("code",null,"AsusRouter >= 0.11.0")],-1),L={class:"custom-container warning"},S=e("p",{class:"custom-container-title"},"Control mode-only service",-1),V=e("code",null,"device control",-1),W=e("code",null,"true",-1),B=a('<ul><li><p>Details:</p><p>Allows changing WLAN settings.</p><h4 id="attributes-1" tabindex="-1"><a class="header-anchor" href="#attributes-1" aria-hidden="true">#</a> Attributes</h4><ul><li><h4 id="entity-id" tabindex="-1"><a class="header-anchor" href="#entity-id" aria-hidden="true">#</a> entity_id</h4><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p><code>entity_id</code> of the WLAN.</p></li></ul></li><li><h4 id="closed" tabindex="-1"><a class="header-anchor" href="#closed" aria-hidden="true">#</a> closed</h4><ul><li><p>Type: <code>boolean</code></p></li><li><p>Details:</p><p>Whether SSID should be hidden.</p></li></ul></li><li><h4 id="password-1" tabindex="-1"><a class="header-anchor" href="#password-1" aria-hidden="true">#</a> password</h4><ul><li>Type: <code>string</code></li></ul></li><li><h4 id="ssid-1" tabindex="-1"><a class="header-anchor" href="#ssid-1" aria-hidden="true">#</a> ssid</h4><ul><li>Type: <code>string</code></li></ul></li><li><h4 id="state" tabindex="-1"><a class="header-anchor" href="#state" aria-hidden="true">#</a> state</h4><ul><li><p>Type: <code>boolean</code></p></li><li><p>Details:</p><p>Whether WLAN should be on.</p></li></ul></li></ul></li></ul>',1);function j(C,E){const t=r("RouterLink");return n(),h("div",null,[c,e("div",u,[p,e("p",null,[i("Entities are created based on the "),_,i(" option of AsusRouter. Refer to the "),d(t,{to:"/guide/configuration/operation-mode.html"},{default:l(()=>[i("Operation mode")]),_:1}),i(" section for more info on how to change this option.")]),b]),f,y,e("ul",null,[m,e("li",null,[x,e("ul",null,[g,e("li",null,[w,e("ul",null,[T,e("li",null,[v,e("p",null,[i("This attribute is only available if the "),k,i(" option is set to "),A,i(". Refer to the "),d(t,{to:"/guide/configuration/security.html"},{default:l(()=>[i("Security")]),_:1}),i(" section for more info on how to change this option.")])])])]),R])])]),N,D,z,e("div",L,[S,e("p",null,[i("This service is available only if the "),V,i(" option of AsusRouter is set to "),W,i(". Refer to the "),d(t,{to:"/guide/configuration/operation-mode.html"},{default:l(()=>[i("Operation mode")]),_:1}),i(" section for more info on how to change this option.")])]),B])}const O=o(s,[["render",j],["__file","wlan.html.vue"]]);export{O as default};
