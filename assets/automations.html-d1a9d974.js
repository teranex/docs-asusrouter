import{_ as n,p as a,q as s,a1 as e}from"./framework-3547d075.js";const t={},i=e(`<h1 id="automations" tabindex="-1"><a class="header-anchor" href="#automations" aria-hidden="true">#</a> Automations</h1><h2 id="actions" tabindex="-1"><a class="header-anchor" href="#actions" aria-hidden="true">#</a> Actions</h2><h2 id="conditions" tabindex="-1"><a class="header-anchor" href="#conditions" aria-hidden="true">#</a> Conditions</h2><h2 id="triggers" tabindex="-1"><a class="header-anchor" href="#triggers" aria-hidden="true">#</a> Triggers</h2><h3 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h3><p>To trigger you automation on any AsusRouter event, use the standart HA <code>event</code> platform.</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">trigger</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">platform</span><span class="token punctuation">:</span> event
    <span class="token key atrule">event_type</span><span class="token punctuation">:</span> asusrouter_device_connected
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><h3 id="device-connection-notification" tabindex="-1"><a class="header-anchor" href="#device-connection-notification" aria-hidden="true">#</a> Device connection notification</h3><p>This automation allows creating HA persistant notifications when a new device connects to your local network and <code>asusrouter_device_connected</code> event is raised in HA.</p><p>Similar automation can be used to get notifications on the other device events:</p><ul><li><code>asusrouter_device_disconnected</code></li><li><code>asusrouter_device_reconnected</code></li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">alias</span><span class="token punctuation">:</span> AsusRouter/New device connected
<span class="token key atrule">description</span><span class="token punctuation">:</span> Create a HA notification for any new device connected to the local network
<span class="token key atrule">trigger</span><span class="token punctuation">:</span>
    <span class="token comment"># Trigger automation on the AsusRouter event</span>
  <span class="token punctuation">-</span> <span class="token key atrule">platform</span><span class="token punctuation">:</span> event
    <span class="token key atrule">event_type</span><span class="token punctuation">:</span> asusrouter_device_connected
<span class="token comment"># No conditions are needed in this example</span>
<span class="token key atrule">condition</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token key atrule">action</span><span class="token punctuation">:</span>
    <span class="token comment"># Create HA persistant notification</span>
  <span class="token punctuation">-</span> <span class="token key atrule">service</span><span class="token punctuation">:</span> persistent_notification.create
    <span class="token key atrule">data_template</span><span class="token punctuation">:</span>
        <span class="token comment"># Title of the notification</span>
        <span class="token key atrule">title</span><span class="token punctuation">:</span> Device has joined the local network
        <span class="token comment"># Body of the notification (allows templating)</span>
        <span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token punctuation">&gt;</span><span class="token punctuation">-</span>
            <span class="token key atrule">MAC</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>trigger.event.data.mac<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token key atrule">IP</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>trigger.event.data.ip<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>trigger.event.data.name<span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token key atrule">mode</span><span class="token punctuation">:</span> queued
<span class="token key atrule">max</span><span class="token punctuation">:</span> <span class="token number">100</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="restart-http-daemon-when-certain-api-endpoints-stop-responding" tabindex="-1"><a class="header-anchor" href="#restart-http-daemon-when-certain-api-endpoints-stop-responding" aria-hidden="true">#</a> Restart HTTP daemon when certain API endpoints stop responding</h3><p>This automation will help with some devices, which experience freezes of certain API endpoints with time. Restart of HTTP daemon allows fixing the issue without need for a full device reboot and all the wireless devices reconnecting.</p><p>Endpoints, which might freeze are responsible for the following sensors:</p><ul><li><code>{device}_lan_speed</code></li><li><code>{device}_wan_speed</code></li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">alias</span><span class="token punctuation">:</span> AsusRouter/HTTPD
<span class="token key atrule">description</span><span class="token punctuation">:</span> Restart HTTP daemon when endpoints stop responding
<span class="token key atrule">trigger</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">platform</span><span class="token punctuation">:</span> state
    <span class="token key atrule">entity_id</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> sensor.<span class="token punctuation">{</span>device<span class="token punctuation">}</span>_lan_speed
    <span class="token key atrule">to</span><span class="token punctuation">:</span> unknown
    <span class="token key atrule">for</span><span class="token punctuation">:</span>
      <span class="token key atrule">hours</span><span class="token punctuation">:</span> <span class="token number">0</span>
      <span class="token key atrule">minutes</span><span class="token punctuation">:</span> <span class="token number">2</span>
      <span class="token key atrule">seconds</span><span class="token punctuation">:</span> <span class="token number">0</span>
<span class="token key atrule">condition</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token key atrule">action</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">device_id</span><span class="token punctuation">:</span> notareauldeviceid
    <span class="token key atrule">domain</span><span class="token punctuation">:</span> button
    <span class="token key atrule">entity_id</span><span class="token punctuation">:</span> button.<span class="token punctuation">{</span>device<span class="token punctuation">}</span>_restart_http_daemon
    <span class="token key atrule">type</span><span class="token punctuation">:</span> press
<span class="token key atrule">mode</span><span class="token punctuation">:</span> single
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),o=[i];function c(p,l){return a(),s("div",null,o)}const d=n(t,[["render",c],["__file","automations.html.vue"]]);export{d as default};
